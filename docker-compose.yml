services:
  backend:
    build:
      context: ./backend
    container_name: backend
    restart: unless-stopped
    ports:
      - "3300:3300"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - cert-data:/etc/letsencrypt
      - webroot-data:/var/www/certbot
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - cert-data:/etc/letsencrypt
      - webroot-data:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done;'"
    depends_on:
      - nginx
    networks:
      - app-network

volumes:
  cert-data:
  webroot-data:

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450